airflow:
  enabled: true
  airflow:
    image:
      repository: helxplatform/roger
      tag: "0.3.0"
      pullPolicy: Always
    executor: KubernetesExecutor
    config:
      AIRFLOW__KUBERNETES__DELETE_WORKER_PODS: "TRUE"
      AIRFLOW__CORE__LOAD_EXAMPLES: "FALSE"
      AIRFLOW__SCHEDULER__SCHEDULE_AFTER_TASK_EXECUTION: "FALSE"
      # Provide http://<URL to nginx >/<web-prefix>
      AIRFLOW__WEBSERVER__BASE_URL: ""
    extraVolumeMounts:
      - name: airflow-data
        mountPath: /opt/airflow/share/data
    extraVolumes:
      - name: airflow-data
        persistentVolumeClaim:
          claimName: search-data

    usersUpdate: true
    configSecretsName: airflow-config-secrets

    # Resource config for all task runner pods.
    kubernetesPodTemplate:
      resources: {}
        # requests:
          # memory: 1Gi

  externalRedis:
    host: search-redis-master
    passwordSecret: search-redis-secret
    passwordSecretKey: password

  dags:
    gitSync:
      enabled: true
      repo: "https://github.com/helxplatform/roger.git"
      repoSubPath: "dags"
      branch: "main"
      revision: "HEAD"
      syncWait: 60

  logs:
    path: /opt/airflow/share/logs
    persistence:
      enabled: true
      storageClass: "" ## WARNING: your StorageClass MUST SUPPORT `ReadWriteMany`
      accessMode: ReadWriteMany
      size: 1Gi

  redis:
    enabled: false

  flower:
    enabled: false

  workers:
    enabled: false

api:
  image:
    repository: helxplatform/dug
    tag: "2.3.0"
    pullPolicy: IfNotPresent

  appName: webserver
  deployment:
    apiPort: 5551
    apiWorkers: 4
    apiTimeout: 10
    extraEnv: []
    logLevel: INFO
    imagePullSecrets: []
    resources: {}
  service:
    name: search-api
    type: ClusterIP
    annotations: {}
    apiPort: "5551"
  debug: false

ui:
  service:
    name: ui
    type: ClusterIP
    servicePort: 8080
    annotations: {}
  http_port: 8080
  container_port: 8080
  image:
    repository: cschreep/helx-search-ui
    tag: "1.1.1-dev"
    pullPolicy: Always
  imagePullSecrets: [ ]
  # Add any extra environment variables not already defined in the chart.
  resources:
    limits:
      cpu: 200m
      memory: 320Mi
    requests:
      cpu: 50m
      memory: 64Mi
  enabled: true
  app_name: ui

  api_url: "http://localhost:5551"
  node_env: development

  appPort: 8080
  containerPort: 8080

  extraEnv:
    - name: PUBLIC_URL
      value: "/ui"

elasticsearch:
  enabled: true
  imageTag: "7.12.0"
  clusterName: search-elasticsearch
  replicas: 1

  extraEnvs:
    - name: ELASTIC_PASSWORD
      valueFrom:
        secretKeyRef:
          name: search-elastic-secret
          key: password
    - name: ELASTIC_USERNAME
      valueFrom:
        secretKeyRef:
          name: search-elastic-secret
          key: username

nboost:
  enabled: false

persistence:
  storageClass: ""
  pvcSize: 1Gi

redis:
  enabled: true
  persistence:
    existingClaim: "redis-data"
  usePassword: true
  clusterDomain: cluster.local
  existingSecret: search-redis-secret
  existingSecretPasswordKey: password
  image:
    repository: redislabs/redisgraph
    tag: 2.2.14
  redis:
    command: "redis-server"
  cluster:
    slaveCount: 1
  master:
    resources:
      requests:
        memory: 8Gi
        cpu: 200m
    command: ""
    readinessProbe:
      enabled: false
    livenessProbe:
      enabled: false
    extraFlags:
      - "--loadmodule /usr/lib/redis/modules/redisgraph.so"
    service:
      port: 6379
  slave:
    resources:
      requests:
        memory: 8Gi
        cpu: 200m
    command: ""
    readinessProbe:
      enabled: false
    livenessProbe:
      enabled: false
    extraFlags:
      - "--loadmodule /usr/lib/redis/modules/redisgraph.so"
    service:
      port: 6379

secrets:
  elastic:
    name: search-elastic-secret
    user: elastic
    userKey: username
    passwordKey: password
  redis:
    name: search-redis-secret
    passwordKey: password

tranql:
  enabled: true
  existingRedis:
    host: search-redis-slave
    port: 6379
    secret: search-redis-secret
    secretPasswordKey: password
  extraEnv:
    - name: WEB_PATH_PREFIX
      value: "/tranql"

  redis:
    enabled: false